{% extends 'base.html.twig' %}

{% block title %}Team: {{ team.name }}{% endblock %}

{% block body %}
{% if team.name in ['Tarbes GB', 'UF Angers', 'Landerneau BB'] %}
    <link href="{{ asset('styles/tarbes.css') }}" rel="stylesheet">
{% elseif team.name == 'Pays Voironnais' %}
    <link href="{{ asset('styles/voiron.css') }}" rel="stylesheet">
{% elseif team.name in ['Saint Amand', 'BC Montbrison'] %}
    <link href="{{ asset('styles/montbrison.css') }}" rel="stylesheet">
{% elseif team.name in ['Basket Landes', 'Chartres Basket'] %}
    <link href="{{ asset('styles/landes.css') }}" rel="stylesheet">
{% elseif team.name in ['Flammes Carolo', 'Cavigal Nice'] %}
    <link href="{{ asset('styles/flammes.css') }}" rel="stylesheet">
{% elseif team.name in ['ESBVA Lille', 'Roche Vendée', 'USO Mondeville', 'Feytiat Basket', 'BB La Tronche-Meylan', 'Le Havre Basket'] %}
    <link href="{{ asset('styles/esbva.css') }}" rel="stylesheet">
{% elseif team.name in ['ASVEL Féminin', 'Toulouse MB', 'Charnay BBS'] %}
    <link href="{{ asset('styles/charnay.css') }}" rel="stylesheet">
{% elseif team.name == 'Tango Bourges' %}
    <link href="{{ asset('styles/bourges.css') }}" rel="stylesheet">
{% elseif team.name in ['Pôle Espoir', 'AS Aulnoye', 'Lattes-Montpellier'] %}
    <link href="{{ asset('styles/blma.css') }}" rel="stylesheet">
{% elseif team.name == 'USD Alençon' %}
    <link href="{{ asset('styles/alencon.css') }}" rel="stylesheet">
{% endif %}

<div class="tout">
  <div class="back-banner">
    <a href="{{ path('app_dashboard_id', { 'id': weekId }) }}" class="back-link">
      <i class="fa-solid fa-backward"></i>
    </a>
    <h1>{{ team.name }}</h1>
  </div>

  <div class="container" style="margin: 0 auto; padding: 0 1rem;">
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th>Prénom</th>
            <th>Nom</th>
            <th>Note</th>
            <th>Action</th>
            {% if is_granted('ROLE_ADMIN') %}
              <th>Points</th>
            {% endif %}
          </tr>
        </thead>
        <tbody>
          {% for player in team.players %}
            <tr>
              <td>{{ player.forename }}</td>
              <td>{{ player.name }}</td>
              <td>{{ player.rating }}</td>
              <td>
                <button type="button" class="add-player-btn" data-player-id="{{ player.id }}" data-player-forename="{{ player.forename }}" data-player-name="{{ player.name }}">
                  Ajouter
                </button>
              </td>
              {% if is_granted('ROLE_ADMIN') %}
                <td>
                  <a href="{{ path('assign_points', { 'playerId': player.id, 'weekId': weekId }) }}" class="add-player-btn">Attribuer des points</a>
                </td>
              {% endif %}
            </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
  </div>

  <div class="card mb-4 mt-4">
    <div class="card-header">DECK</div>
    <div class="card-body">
      <ul id="deckPlayers" class="list-group d-flex flex-wrap">
        {% for player in selectedPlayers %}
          <li class="list-group-item">{{ player.forename }} {{ player.name }}</li>
        {% endfor %}
      </ul>
    </div>
  </div>
</div>

{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
    function confirmDelete(playerId, playerName, weekId) {
      if (confirm('Êtes-vous sûr de vouloir supprimer ' + playerName + ' du DECK ?')) {
        fetch(`/dashboard/delete-player/${weekId}/${playerId}`, {
          method: 'DELETE',
          headers: {
            'X-CSRF-TOKEN': '{{ csrf_token('delete-player') }}'
          }
        })
        .then(response => {
          if (response.ok) {
            alert(playerName + ' a été supprimé du DECK.');
            location.reload();
          } else {
            alert('Une erreur s\'est produite lors de la suppression de ' + playerName);
          }
        })
        .catch(error => {
          alert('Erreur : ' + error.message);
        });
      }
    }

    document.addEventListener('DOMContentLoaded', function() {
      const weekId = new URLSearchParams(window.location.search).get('weekId');

      document.querySelectorAll('.add-player-btn').forEach(button => {
        button.addEventListener('click', function() {
          const playerId = this.dataset.playerId;
          const playerForename = this.dataset.playerForename;
          const playerName = this.dataset.playerName;

          fetch("{{ path('app_team_save_players') }}?weekId=" + encodeURIComponent(weekId), {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ players: [{ id: playerId, forename: playerForename, name: playerName }] }),
          })
          .then(response => response.json())
          .then(data => {
            if (data.status === 'success') {
              const deckPlayersList = document.getElementById('deckPlayers');
              const newPlayerItem = document.createElement('li');
              newPlayerItem.classList.add("list-group-item");
              newPlayerItem.textContent = `${playerForename} ${playerName}`;
              deckPlayersList.appendChild(newPlayerItem);

              alert(playerForename + ' ' + playerName + ' a été ajouté avec succès!');
            } else {
              alert('Erreur: ' + data.message);
            }
          })
          .catch(error => {
            alert('Erreur: ' + error.message);
            console.error('Erreur:', error);
          });
        });
      });
    });
  </script>
{% endblock %}
